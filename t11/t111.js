const 대전지하철노선 = {
  일호선: {
    개통년도: 2006,
    요금: 1400,
    역목록: [
      "반석",
      "지족",
      "노은",
      "월드컵경기장",
      "현충원",
      "구암",
      "유성온천",
      "갑천",
      "월평",
      "갈마",
      "정부청사",
      "시청",
      "탄방",
      "용문",
      "오룡",
      "서대전네거리",
      "중구청",
      "중앙로",
      "대전",
      "대동",
      "신흥",
      "판암",
    ],
  },
  이호선: {
    개통년도: 2028, // 예정년도 (변동 가능)
    요금: 1400, // 동일 요금 적용 예상
    역목록: [
      "서대전",
      "도마",
      "정림",
      "버드내",
      "유천",
      "문창",
      "중구청",
      "충남대병원",
      "은행동",
      "대전",
      "한밭대",
      "용운",
      "대전대",
      "가오",
      "신흥",
      "용전",
      "대전터미널",
      "대전시청",
      "둔산",
      "정부청사",
    ],
  },
};

// 역리스트돌면서순번과함께출력
function 예제일번() {
  function 방문역목록출력하기(역들, 콜백) {
    for (let i = 0; i < 역들.length; i++) {
      콜백(역들[i], i);
    }
  }
  방문역목록출력하기(대전지하철노선.일호선.역목록, (역, 번호) => {
    console.log("1호선", 번호 + 1, " 번", 역, " 역");
  });
  방문역목록출력하기(대전지하철노선.이호선.역목록, (역, 번호) => {
    console.log("2호선", 번호 + 1, " 번", 역, " 역");
  });
}
// 예제일번();

function 예제일번심화() {
  function 방문역목록출력하기(역들, 콜백) {
    for (let i = 0; i < 역들.length; i++) {
      콜백(역들[i], i);
    }
  }
  for (let 노선 in 대전지하철노선) {
    방문역목록출력하기(대전지하철노선[노선].역목록, function (역, 번호) {
      console.log(노선, 역, 번호);
    });
  }
}
// 예제일번심화();

// 2글자 이하 역명을 찾아서 출력
function 예제이번() {
  function 두글자이하인역명을찾아서출력(역들, 콜백) {
    for (let i = 0; i < 역들.length; i++) {
      콜백(역들[i], i);
    }
  }
  두글자이하인역명을찾아서출력(대전지하철노선.일호선.역목록, function (역) {
    if (역.length <= 2) {
      console.log("일호선 두글자인 역 : ", 역);
    }
  });
  두글자이하인역명을찾아서출력(대전지하철노선.일호선.역목록, function (역) {
    if (역.length <= 2) {
      console.log("이호선 두글자인 역 : ", 역);
    }
  });
}
// 예제이번();

function 예제이번심화() {
  function 두글자이하인역명을찾아서출력(역들, 콜백) {
    for (let i = 0; i < 역들.length; i++) {
      콜백(역들[i]);
    }
  }
  for (let 노선 in 대전지하철노선) {
    두글자이하인역명을찾아서출력(대전지하철노선[노선].역목록, (역) => {
      if (역.length <= 2) {
        console.log(노선, 역);
      }
    });
  }
}
// 예제이번심화();

// 전체역계수 계산
function 예제삼번() {
  function 전체역계수세아리기(역들인자) {
    let 전체역계수 = 0;
    for (let i = 0; i < 역들인자.length; i++) {
      전체역계수 = 전체역계수 + 1;
    }
    return 전체역계수;
  }
  console.log(
    "일호선 전체역계수",
    전체역계수세아리기(대전지하철노선.일호선.역목록),
    "이호선 전체역계수",
    전체역계수세아리기(대전지하철노선.이호선.역목록)
  );
}
// 예제삼번();

function 예제삼번심화() {
  function 전체역계수세아리기(역들) {
    let 전체역계수 = 0;
    for (let i = 0; i < 역들.length; i++) {
      전체역계수++;
    }
    return 전체역계수;
  }
  for (let 노선 in 대전지하철노선) {
    console.log(노선, 전체역계수세아리기(대전지하철노선[노선].역목록));
  }
}
// 예제삼번심화();

// 승객 유형별 요금 계산 (성인/청소년/어린이)
function 예제사번() {
  function 요금계산기(호선) {
    let 노선요금 = 대전지하철노선[호선].요금; // 수정: 매개변수 사용
    function 어린이요금() {
      return 노선요금 * 0.5;
    }
    function 중린이요금() {
      return 노선요금 * 0.8; // 수정: 청소년 요금
    }
    function 어른이요금() {
      return 노선요금; // 수정: 성인 요금
    }
    function 과도한어른이요금() {
      return 노선요금 * 1.2; // 수정: 과도한 요금
    }
    return {
      어린이: 어린이요금(),
      중린이: 중린이요금(),
      어른이: 어른이요금(),
      과도한어른이: 과도한어른이요금(),
    };
  }
  console.log(요금계산기("일호선")); // 수정: 문자열로 전달
}
// 예제사번();

